import pandas as pd
import numpy as np
import sys
np.set_printoptions(threshold=sys.maxsize)

# read in both excel files into pandas dataframes
md_files = pd.read_excel('G:\\datasets\\mining_district\\mining_district_files_12202019.xlsx')
commodities = pd.read_excel('G:\\datasets\\mining_district\\nv_commodities.xlsx')

# take a look at unique values in the mining district files commodities list
comm_list = md_files.commodity.str.cat(sep="; ")
comm_list_arr = comm_list.split("; ")
comm_list_arr = np.unique(comm_list_arr, axis=0)

# identify values that are in the mining district file spreadsheet but NOT in the commodities master list

#first, change lists to sets and make them all lower case for comparison
lower_md_comm = {item.lower() for item in comm_list_arr}
lower_gen_comm = {item.lower() for item in commodities.name}

#find out what values are in the mining district files that do overlap with the commodities master list, and which ones don't
not_in = lower_md_comm.difference(lower_gen_comm)
intersection = lower_md_comm.intersection(lower_gen_comm)

df=pd.DataFrame(md_files)
#values unique to md_files with misspellings
df=df.replace(to_replace ='BAIRITE', value ="BARYTE", regex= True)
df=df.replace(to_replace='platimun', value='platinum', regex= True)
df=df.replace(to_replace='tunsten', value='tungsten', regex= True)
df=df.replace(to_replace='silca sand',value='silica sand', regex= True)
df=df.replace(to_replace='murcury', value='mercury', regex= True)
df=df.replace(to_replace='glod', value='gold', regex= True)
df=df.replace(to_replace='hornsilver', value='horn silver', regex= True)
df=df.replace(to_replace='magnesiuim', value= 'magnesium', regex= True)
df=df.replace(to_replace='varicite', value='variscite', regex= True)
df=df.replace(to_replace='fluorspar;barite', value='fluorspar; barite', regex= True)
df=df.replace(to_replace='fledspar', value='feldspar', regex= True)
df=df.replace(to_replace='bitumens', value='bituminous minerals', regex= True)
df=df.replace(to_replace='fluroite', value= 'fluorite', regex= True)
df=df.replace(to_replace='lead-sillver', value= 'lead-silver', regex= True)
df=df.replace(to_replace='cpper', value='copper', regex= True)
df=df.replace(to_replace='sheelite', value='scheelite', regex= True)
df=df.replace(to_replace='malacite', value='malachite', regex= True)
df=df.replace(to_replace='mangansese', value='manganese', regex= True)
df=df.replace(to_replace='vanandinite', value='vanadinite', regex= True)
df=df.replace(to_replace='soduim nitrate', value='sodium nitrate', regex= True)
df=df.replace(to_replace='wolastonite', value='wollastonite', regex= True)
df=df.replace(to_replace='mangnaese', value='manganese', regex= True)
df=df.replace(to_replace='molybdemum', value='molybdenum', regex= True)
df=df.replace(to_replace='silver;copper', value='silver; copper', regex= True)
df=df.replace(to_replace='wulphur', value='sulphur', regex= True)
df=df.replace(to_replace='cerrusite', value='cerrussite', regex= True)
df=df.replace(to_replace='ainc', value='zinc', regex= True)
df=df.replace(to_replace='paladium', value='palladium', regex= True)
df=df.replace(to_replace='salines', value= 'saline minerals', regex= True)
df=df.replace(to_replace='cpidote', value= 'epidote', regex= True)
df=df.replace(to_replace='batite', value='barite', regex= True)
df=df.replace(to_replace='ceragyrite', value='cerargyrite', regex= True)
df=df.replace(to_replace='liemstone', value='limestone', regex= True)
df=df.replace(to_replace='ismium', value='osmium', regex= True)
df=df.replace(to_replace='pumacite', value='pumicite', regex= True)
df=df.replace(to_replace='cuo', value= 'copper oxide', regex= True)
df=df.replace(to_replace='siler', value='silver', regex= True)
df=df.replace(to_replace='goldl', value='gold', regex= True)
df=df.replace(to_replace='phospherous', value='phosphorous', regex= True)
df=df.replace(to_replace='wollastorite', value='wollastonite', regex= True)
df=df.replace(to_replace='molybdenyum', value='molybdenum', regex= True)
df=df.replace(to_replace='goled', value='gold', regex= True)
df=df.replace(to_replace= 'andelusite', value= 'andalusite', regex= True)
df=df.replace(to_replace='flurine', value='fluorine', regex= True)
df=df.replace(to_replace='diatomaceaous', value= 'diatomaceous' , regex= True)
df=df.replace(to_replace='leaseable', value='leasable' , regex= True)
df=df.replace(to_replace='milybdenum', value= 'molybdenum', regex= True)
df=df.replace(to_replace='chlorite;talc;calcite', value='chlorite; talc; calcite', regex= True)
df=df.replace(to_replace='coppeer', value= 'copper', regex= True)
df=df.replace(to_replace='clay;talc', value='clay; talc', regex= True)
df=df.replace(to_replace='brucitite-magnesite', value='brucite-magnesite', regex= True)
df=df.replace(to_replace='wolfenite', value= 'wulfenite', regex= True)
df=df.replace(to_replace='silver sulfides and preciuos-metals', value='silver sulfides and precious-metals', regex= True)
df=df.replace(to_replace='maganese', value='manganese', regex= True)
df=df.replace(to_replace='casserite', value='cassiterite', regex= True)
df=df.replace(to_replace='florite', value='fluorite', regex= True)
df=df.replace(to_replace='mercry', value='mercury', regex= True)
df=df.replace(to_replace='phos-o', value='phosphorus', regex= True)
df=df.replace(to_replace='tugnsten', value='tungsten', regex= True)
df=df.replace(to_replace='gysum', value='gypsum', regex= True)
df=df.replace(to_replace='stivnite', value='stibnite', regex= True)
df=df.replace(to_replace='vanadenite', value='vanadinite', regex= True)
df=df.replace(to_replace='bairte', value='barite', regex= True)
df=df.replace(to_replace='calcite;dolomite;sepiolite;silicate;mg clay', value='calcite; dolomite; sepiolite; silicate; magnesium clay', regex= True)
df=df.replace(to_replace='sercite', value='sericite', regex= True)
df=df.replace(to_replace='molyhdenum',value='molybdenum', regex= True)
df=df.replace(to_replace='golq', value='gold', regex= True)
df=df.replace(to_replace='coopper', value='copper', regex= True)
df=df.replace(to_replace='copper;bairite', value='copper; barite', regex= True)
df=df.replace(to_replace='posellite', value='powellite', regex= True)
df=df.replace(to_replace='tellinium', value='tellurium', regex= True)
df=df.replace(to_replace='silver-sinc-lead', value='silver-zinc-lead', regex= True)
df=df.replace(to_replace='tungiten', value='tungsten', regex= True)
df=df.replace(to_replace='siilver', value='silver', regex= True)
df=df.replace(to_replace='laead', value='lead', regex= True)
df=df.replace(to_replace='montmorillinitic clay', value='montmorillonite clay', regex= True)
df=df.replace(to_replace='wallastonite', value='wollastonite', regex= True)
df=df.replace(to_replace='talc;chlorite', value='talc; chlorite', regex= True)
df=df.replace(to_replace='mersury', value='mercury', regex= True)
df=df.replace(to_replace='sodium sufate', value='sodium sulfate', regex= True)
df=df.replace(to_replace='sulphides', value='sulfides', regex= True)
df=df.replace(to_replace='sulvides and precious metals', value='sulfides and precious metals', regex= True)
df=df.replace(to_replace='uranium, copper, nickle, cobalt', value='uranium, copper, nickel, cobalt', regex= True)
df=df.replace(to_replace='diamtomite', value='diatomite', regex= True)
df=df.replace(to_replace='vanudium', value='vanadium', regex= True)
df=df.replace(to_replace='betonite', value='bentonite', regex= True)
df=df.replace(to_replace='arsencic', value='arsenic', regex= True)
df=df.replace(to_replace='chrysacolla', value='chrysocolla', regex= True)
df=df.replace(to_replace='colbalt', value='cobalt', regex= True)
df=df.replace(to_replace='volcanid ash', value='volcanic ash', regex= True)
df=df.replace(to_replace='and minor ammounts of mercury', value='and minor amounts of mercury', regex= True)
df=df.replace(to_replace='antimony?', value='antimony', regex= True)
df=df.replace(to_replace='antomony', value='antinomy', regex= True)
df=df.replace(to_replace= 'arsenci', value= 'arsenic', regex= True)
df=df.replace(to_replace= 'arsencic',value= 'arsenic', regex= True)
df=df.replace(to_replace= 'arsnic',value= 'arsenic', regex= True)
df=df.replace(to_replace='artimony', value='antinomy', regex= True)
df=df.replace(to_replace='au', value= 'gold', regex= True)
df=df.replace(to_replace='au, ag', value= 'gold, silver', regex= True)
df=df.replace(to_replace='bairte', value= 'barite', regex= True)
df=df.replace(to_replace= 'batite', value= 'barite', regex= True)
df=df.replace(to_replace='berrylium', value= 'beryllium', regex= True)
df=df.replace(to_replace='betonite', value='bentonite', regex= True)
df=df.replace(to_replace='casserite', value='cassitrite', regex= True)
df=df.replace(to_replace='cerrusite', value='cerussite', regex= True)
df=df.replace(to_replace='chlorargyite', value='chlorargrite', regex= True)
df=df.replace(to_replace='chrysacolla', value='chrysocolla', regex= True)
df=df.replace(to_replace='colbalt', value= 'cobalt', regex= True)
df=df.replace(to_replace='coper', value= 'copper', regex= True)
df=df.replace(to_replace='coppeer', value= 'copper', regex= True)
df=df.replace(to_replace='copper?', value= 'copper', regex= True)
df=df.replace(to_replace='coppper', value= 'copper', regex= True)
df=df.replace(to_replace='cpper', value= 'copper', regex= True)
df=df.replace(to_replace='cpidote', value='epidote', regex= True)
df=df.replace(to_replace='diamtomite', value='diatomite', regex= True)
df=df.replace(to_replace='fledspar', value='feldspar', regex= True)
df=df.replace(to_replace='florite', value='fluorite', regex= True)
df=df.replace(to_replace='flourite', value='fluorite', regex= True)
df=df.replace(to_replace='flurine', value='fluorine', regex= True)
df=df.replace(to_replace='fluroite', value='fluorite', regex= True)
df=df.replace(to_replace='fluroite;gold', value= 'fluorite, gold', regex= True)
df=df.replace(to_replace='flurotie', value='fluorite', regex= True)
df=df.replace(to_replace='glod',value= 'gold', regex= True)
df=df.replace(to_replace='god',value= 'gold', regex= True)
df=df.replace(to_replace='phospherous', value= 'phosphorus', regex= True)
df=df.replace(to_replace='glold',value= 'gold', regex= True)
df=df.replace(to_replace='hgold', value='horn gold', regex= True)
df=df.replace(to_replace='irigium', value='iridium', regex= True)
df=df.replace(to_replace='laead', value='lead', regex= True)
df=df.replace(to_replace='maganese', value='manganese', regex= True)
df=df.replace(to_replace='magnesia alum', value='magnesia alumina', regex= True)
df=df.replace(to_replace='magnesiuim', value='magnesium', regex= True)
df=df.replace(to_replace='mangane4se', value='manganese', regex= True)
df=df.replace(to_replace='mangansese', value='manganese', regex= True)
df=df.replace(to_replace='mangnaese', value='manganese', regex= True)
df=df.replace(to_replace='marganese', value='manganese', regex= True)
df=df.replace(to_replace='milybdenum',value='molybdenum', regex= True)
df=df.replace(to_replace='modybdenum',value='molybdenum', regex= True)
df=df.replace(to_replace='molbdenum',value='molybdenum', regex= True)
df=df.replace(to_replace='molbdenum',value='molybdenum', regex= True)
df=df.replace(to_replace='molybdemum',value='molybdenum', regex= True)
df=df.replace(to_replace='molybdeum',value='molybdenum', regex= True)
df=df.replace(to_replace='molybedeaum',value='molybdenum', regex= True)
df=df.replace(to_replace='molybedum',value='molybdenum', regex= True)
df=df.replace(to_replace='molybenum',value='molybdenum', regex= True)
df=df.replace(to_replace='molyhdenum',value='molybdenum', regex= True)
df=df.replace(to_replace='molyndenum',value='molybdenum', regex= True)
df=df.replace(to_replace='montmorillinitic clay', value= 'montmorillic clay', regex= True)
df=df.replace(to_replace='morillonite', value='montmorllinite', regex= True)
df=df.replace(to_replace='murcury', value='mercury', regex= True)
df=df.replace(to_replace='paladium', value= 'palladium', regex= True)
df=df.replace(to_replace='potussium chloride', value= 'potassium chloride', regex= True)
df=df.replace(to_replace='rungsten', value='tungsten', regex= True)
df=df.replace(to_replace='silca sand', value='silica sand', regex= True)
df=df.replace(to_replace='silve', value='silver', regex= True)
df=df.replace(to_replace='silver haloid salts', value='silver halide salts', regex= True)
df=df.replace(to_replace='preciuos-metals', value='precious metals', regex= True)
df=df.replace(to_replace='silver-sinc-lead', value='silver, zinc, lead', regex= True)
df=df.replace(to_replace='siver', value='silver', regex= True)
df=df.replace(to_replace='sodium sufate', value='sodium sulfate', regex= True)
df=df.replace(to_replace='soduim nitrate', value='sodium nitrate', regex= True)
df=df.replace(to_replace='stivnite', value='stibnite', regex= True)
df=df.replace(to_replace='sulphur deposites', value='sulphur deposits', regex= True) 
df=df.replace(to_replace='sulvides and precious metals', value='sulfides, precious metals', regex= True)
df=df.replace(to_replace='tellinium', value= 'tellurium', regex= True)
df=df.replace(to_replace='travertine (building stone?)', value='travertine', regex= True)
df=df.replace(to_replace='tugnsten', value='tungsten', regex= True)
df=df.replace(to_replace='tugsten', value='tungsten', regex= True)
df=df.replace(to_replace='tungiten', value='tungsten', regex= True)
df=df.replace(to_replace='tungston', value='tungsten', regex= True)
df=df.replace(to_replace='tunsgten', value='tungsten', regex= True)
df=df.replace(to_replace='tunsten', value='tungsten', regex= True)
df=df.replace(to_replace='turquois', value='turquoise', regex= True)
df=df.replace(to_replace='vanadiuml zinc', value= 'vanadium zinc', regex= True)
df=df.replace(to_replace='vanandinite', value= 'vanadinite', regex= True)
df=df.replace(to_replace='vanudium', value= 'vanadium', regex= True)
df=df.replace(to_replace='varicite', value= 'variscite', regex= True)
df=df.replace(to_replace='wallastonite', value='wollastonite', regex= True)
df=df.replace(to_replace='wolastonite', value='wollastonite', regex= True)
df=df.replace(to_replace='wolfenite', value='wulfenite', regex= True)
df=df.replace(to_replace='zinc?', value='zinc', regex= True)
df=df.replace(to_replace='zince', value='zinc', regex= True)
df=df.replace(to_replace='zine', value='zinc', regex= True)

#values that intersect with misspellings need to also replace in the commodities list
df=df.replace(to_replace='soduim nitrate', value='sodium nitrate', regex= True)
df=df.replace(to_replace='sodium sufate', value='sodium sulfate', regex= True)
df=df.replace(to_replace='leaseable minerals', value='leasable minerals', regex= True)

#still having trouble with these. the spelling is correct, the only issue is the (?)
df=df.replace(to_replace= "zinc (\?)", value='zinc', regex= True)
df=df.replace(to_replace="disseminated gold (\?)", value='disseminated gold', regex= True)
df=df.replace(to_replace="barium (\?)", value='barium', regex= True)
df=df.replace(to_replace="antimony (\?)", value='antimony', regex= True)
df=df.replace(to_replace="borates (\?)", value='borates', regex= True)
df=df.replace(to_replace="gem quality jasper (\?)", value= 'gem quality jasper', regex= True)
df=df.replace(to_replace="jasperoid (\?)", value= 'jasperoid', regex= True)
df=df.replace(to_replace="fluorite (\?)", value='fluorite', regex= True)
df=df.replace(to_replace="fluorine (\?)", value='fluorine', regex= True)
df=df.replace(to_replace="gold (\?)",value= 'gold', regex= True)
df=df.replace(to_replace="copper (\?)", value= 'copper', regex= True)
df=df.replace(to_replace="copper oxides (\?)", value= 'copper', regex= True)
df=df.replace(to_replace="chromium (\?)", value= 'chromium', regex= True)
df=df.replace(to_replace="manganese (\?)", value='manganese', regex= True)
df=df.replace(to_replace="mercury (\?)", value= 'mercury', regex= True)
df=df.replace(to_replace="silver gold (\?)" , value='silver, gold', regex=True)
df=df.replace(to_replace="precious metals (\?)", value= 'precious metals', regex= True)
df=df.replace(to_replace="precious-metals (\?)", value= 'precious metals', regex= True)
df=df.replace(to_replace="precious-metal (\?)", value= 'precious metals', regex= True)
df=df.replace(to_replace="quartz (\?)", value= 'quartz', regex= True)
df=df.replace(to_replace="sulfides (\?)", value='sulfides', regex=True)
df=df.replace(to_replace="titanium(\?)", value='titanium', regex= True)
df=df.replace(to_replace="uranium (\?)", value='uranium', regex= True)
df=df.replace(to_replace= "vanadium (\?)", value= 'vanadium', regex=True)
df=df.replace(to_replace="zeolite (\?)", value='zeolite', regex= True)
df=df.replace(to_replace="zeolites (\?)", value='zeolites', regex= True)
df=df.replace(to_replace="zinc (\?)", value='zinc', regex= True)
df=df.replace(to_replace="zine (\?)", value='zinc', regex= True)



df.to_excel(r'/Users/LoganWeeks/Desktop/NBMG work stuff/minning_district_files_02112020.xlsx')


md_files = pd.read_excel(r'/Users/LoganWeeks/Desktop/NBMG work stuff/minning_district_files_02112020.xlsx')
counties = pd.read_excel('district_info_01212020.xlsx')
counties= counties.apply(lambda x: x.str.strip() if x.dtype == "object" else x)

county_list = md_files.county.str.cat(sep=", ")
county_list_arr = county_list.split(", ")
county_list_arr = np.unique(county_list_arr, axis=0)

m_county_list1 = counties.county1.str.cat(sep=", ")
m_county_list_arr1 = m_county_list1.split(", ")
m_county_list_arr1 = np.unique(m_county_list_arr1, axis=0)

m_county_list2 = counties.county2.str.cat(sep=", ")
m_county_list_arr2 = m_county_list2.split(", ")
m_county_list_arr2 = np.unique(m_county_list_arr2, axis=0)

lower_md_county = {item.lower() for item in county_list_arr}
lower_gen_county = {item.lower() for item in m_county_list_arr1}

not_in = lower_md_county.difference(lower_gen_county)
intersection = lower_md_county.intersection(lower_gen_county)

df=pd.DataFrame(md_files)

df=df.replace(to_replace='elko co.', value='Elko', regex= True)
df=df.replace(to_replace='mineral co.', value='Mineral', regex= True)
df=df.replace(to_replace='eklo', value='Elko', regex= True)
df=df.replace(to_replace='douglass', value='Douglas', regex= True)
df=df.replace(to_replace='clark ?', value='Clark', regex= True)
df=df.replace(to_replace='humboldt (\?)', value='Humboldt', regex= True)
#make not of the question marks for humbolt and clark
df=df.replace(to_replace='FMG', value='', regex= True)
df=df.replace(to_replace='F', value='Humboldt', regex= True)
df=df.replace(to_replace='lyon and douglas', value='lyon, douglas', regex= True)
df=df.replace(to_replace='elko; box elder and tooele utah', value='elko, box elder utah, tooele utah', regex= True)
df=df.replace(to_replace='white pine; elko', value='white pine, elko', regex= True)
df=df.replace(to_replace='douglas; lyon', value='douglas, lyon', regex= True)
df=df.replace(to_replace='lyon; storey', value='lyon, storey', regex= True)
df=df.replace(to_replace='washoe or pershing', value='washoe, pershing', regex= True)
df=df.replace(to_replace='nye; white pine', value='nye, white pine', regex= True)
df=df.replace(to_replace='storey; washoe', value='storey, washoe', regex= True)
df=df.replace(to_replace='eureka; lander', value='eureka, lander', regex= True)
df=df.replace(to_replace='nye/esmeralda', value='nye, esmeralda', regex= True)
df=df.replace(to_replace='pershing/humboldt', value='pershing, humboldt', regex= True)
df=df.replace(to_replace='alpine', value='alpine(ca)', regex= True)
df=df.replace(to_replace='esmeralda; mineral', value='esmeralda, mineral', regex= True)
df=df.replace(to_replace='churchhill', value='churchill', regex= True)
df=df.replace(to_replace='humbodlt', value='humboldt', regex= True)
df=df.replace(to_replace='churchhill/mineral', value='churchill, mineral', regex= True)
df=df.replace(to_replace='lyon; mineral', value='lyon, mineral', regex= True)
df=df.replace(to_replace='esmeralds', value='esmeralda', regex= True)
df=df.replace(to_replace='churchill,', value='churchill', regex= True)
df=df.replace(to_replace='elko,nv and box elder', value='elko, box elder utah', regex= True)
df=df.replace(to_replace='humboldt/lander', value='humboldt, lander', regex= True)
df=df.replace(to_replace='eureka and lander', value='eureka, lander', regex= True)
df=df.replace(to_replace='lander; nye', value='lander, nye', regex= True)
df=df.replace(to_replace='washoe; storey', value='washoe, storey', regex= True)
df=df.replace(to_replace='pershing; humboldt', value='pershing, humboldt', regex= True)
df=df.replace(to_replace='esmerdalda', value='esmeralda', regex= True)
df=df.replace(to_replace='nye and esmeralda', value='nye, esmeralda', regex= True)
df=df.replace(to_replace='emeralda', value='esmeralda', regex= True)
df=df.replace(to_replace='churchill/mineral', value='churchill, mineral', regex= True)
df=df.replace(to_replace='eureka; elko', value='eureka, elko', regex= True)
df=df.replace(to_replace='nye; lander', value='nye, lander', regex= True)
df=df.replace(to_replace='churchill; lander', value='churchill, lander', regex= True)
df=df.replace(to_replace='lincoln; nye', value='lincoln, nye', regex= True)
df=df.replace(to_replace='humboldt; pershing', value='humboldt, pershing', regex= True)
df=df.replace(to_replace='lyon/mineral', value='lyon, mineral', regex= True)
df=df.replace(to_replace='carson', value='carson city', regex= True)
df=df.replace(to_replace='lander/ churchill', value='lander, churchill', regex= True)
df=df.replace(to_replace='reno1', value='', regex= True)

df.to_excel(r'/Users/LoganWeeks/Desktop/NBMG work stuff/minning_district_files_02112020_UPDATED.xlsx')

gen_comm_list = commodities.name.str.cat(sep="; ")
gen_comm_list_arr = comm_list.split("; ")
gen_comm_list_arr = np.unique(comm_list_arr, axis=0)
lower_gen_comm_list = {item.lower() for item in gen_comm_list_arr}

df=pd.DataFrame(commodities)

df=pd.DataFrame(commodities)
df=df.replace(to_replace='Copper Molybdenium', value='Copper Molybdenum', regex=True)
df=df.replace(to_replace='Copper Tungston', value= 'Copper Tungsten', regex= True)
df=df.replace(to_replace='Leaseable Minerals', value= 'Leasable Minerals', regex= True)
df=df.replace(to_replace='Neodynium', value='Neodymium', regex=True)
df=df.replace(to_replace='Lead Tungston', value='Lead Tungsten', regex=True)
df=df.replace(to_replace='SODUIM NITRATE', value='SODIUM NITRATE', regex=True)
df=df.replace(to_replace='SODIUM SUFATE', value='SODIUM SULFATE', regex= True)

